entities:
  docs:
    title: Документы
    description: >
      Документы универсальная сущность способная хранить в себе различную информацию: тест, таблицы, диаграммы, код и т.д
      Особенностью документов в DocHub является их каталогизация в архитектурном DataLake. Все документы имеют метаинформацию
      в архитектурном озере, что позволяет делать запросы к этой информации.
    # Конфигурация 
    config:
      root_menu: Документы # Корневой элемент меню
    # Строим меню по объектам документа
    menu: >
      (
        $root_menu := entities.docs.config.root_menu;
        $append([
            {
              "title": 'Документы',
              "location": $root_menu,
              "expand": true,
              "icon": 'description'
            }
          ],
          docs.$spread().(
              $location := *.location~>$substring(0, 1) = "/"
                ? *.location~>$substring(1)
                : $root_menu & "/" & *.location;
              *.location ? {
                  "location": $location,
                  "order": *.order,
                  "link": "@document/" & $keys()[0],
                  "id": $keys()[0]
              }
          )
        )
      )
    # Декларирование объектов сущности
    objects:
      document: 
        route: "/:dh-doc-id"               # Путь к объектам компонента
        title: Документ                    # Название объекта 
        presentation: blank                # Презентация объекта по умолчанию
        resources:                         # Здесь храним нужные ресурсы
          icon: >
            <svg viewBox="0 0 24 24" width="64px" height="64px" xmlns="http://www.w3.org/2000/svg">
              <path fill="currentColor" d="M6,2A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6M6,4H13V9H18V20H6V4M8,12V14H16V12H8M8,16V18H13V16H8Z"></path>
            </svg>
        symbol: >                          # Графическое представление объекта
          (
            /* В качестве символа возвращаем иконку */
            $self.resources.icon;
          )
    # Схема данных объекта "Документ"
    schema:
      type: object
      patternProperties:
        "^[0-9a-zA-Z][-zA-Z0-9_-]*(\\.[-zA-Z][-zA-Z0-9_-]*)*$":
          type: object
          properties:
            title:
              title: Название документа
              type: string
            location:
              title: Место расположения в меню
              type: string
            icon:
              title: Иконка в меню
              type: string
            type:
              title: Тип документа
              type: string
            subjects:
              title: Принадлежит объектам
              type: array
              items:
                type: string
            template:
              title: Путь к файлу шаблона
              type: string
            source:
              title: Источник данных (документ, объект, запрос или dataset)
              anyOf:
                - type: string
                  title: Идентификатор dataset
                  pattern: "^[0-9a-zA-Z][-zA-Z0-9\_]*(\\.[-zA-Z][-zA-Z0-9\\_]*)*$"
                - type: string
                  title: JSONata запрос
                  pattern: "\\s*\\((.|\\s)*\\)\\s*"
                - title: Ссылка на документ
                  "$ref": "#/$defs/$res-uri-reference"
                - title: Объект
                  type: object
                - title: Массив
                  type: array
      additionalProperties: false
      examples:
        # Структурированный идентификатор документа
        - auth_service.login:
            # Название документа
            title: Требования к авторизации
            # Разъяснение сути документа
            description: >
              Содержит требования к авторизации в сервисах компании.
              Все сервисы должны строго следовать этому документу.
            # Тип документа
            type: markdown
            # Файл в котором содержится требования
            source: login_rules.md
          
          
